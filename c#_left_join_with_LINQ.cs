/*#!/usr/bin/mcs -r:System.Windows.Forms.dll -r:System.Drawing.dllset CSC=C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin\Roslyn\set CSC=c:\Windows\Microsoft.NET\Framework64\v4.0.30319\set path=%csc%;%path%csc.exe -debug+ -target:winexe -r:System.Windows.Forms.dll -r:System.Drawing.dll c#_left_join_with_LINQ.cscsc.exe -debug+ -target:exe -r:System.Windows.Forms.dll,System.Drawing.dll -platform:x64 C#_left_join_with_LINQ.cs && c#_left_join_with_LINQ.exe*/using System;using System.Windows.Forms;using System.Drawing;using System.IO;using System.Text.RegularExpressions;using System.Collections; // for Hashtable()using System.Collections.Generic; // for List()using System.Text; // Encodingusing System.Data; // DataTableusing System.Linq;class Person{    public string FirstName { get; set; }    public string LastName { get; set; }}class Pet{    public string Name { get; set; }    public Person Owner { get; set; }}class LeftOuterJoinExample {	  public static void Main() {		    Person magnus = new Person { FirstName = "Magnus", LastName = "Hedlund" };    Person terry = new Person { FirstName = "Terry", LastName = "Adams" };    Person charlotte = new Person { FirstName = "Charlotte", LastName = "Weiss" };    Person arlene = new Person { FirstName = "Arlene", LastName = "Huff" };    Pet barley = new Pet { Name = "Barley", Owner = terry };    Pet boots = new Pet { Name = "Boots", Owner = terry };    Pet whiskers = new Pet { Name = "Whiskers", Owner = charlotte };    Pet bluemoon = new Pet { Name = "Blue Moon", Owner = terry };    Pet daisy = new Pet { Name = "Daisy", Owner = magnus };    // Create two lists.    List<Person> people = new List<Person> { magnus, terry, charlotte, arlene };    List<Pet> pets = new List<Pet> { barley, boots, whiskers, bluemoon, daisy };    var query = from person in people                join pet in pets on person equals pet.Owner into gj                from subpet in gj.DefaultIfEmpty()                select new { person.FirstName, PetName = subpet.Name ?? String.Empty };	try	{		foreach (var v in query)		{			Console.WriteLine(v.FirstName+":"+v.PetName);		}	}	catch (Exception e)	{		Console.WriteLine(e.Message);	}	  }}// This code produces the following output://// Magnus:        Daisy// Terry:         Barley// Terry:         Boots// Terry:         Blue Moon// Charlotte:     Whiskers// Arlene: